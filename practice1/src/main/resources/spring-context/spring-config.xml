<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:integration="http://www.springframework.org/schema/integration"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/integration
                           http://www.springframework.org/schema/integration/spring-integration.xsd">

    <context:annotation-config/>


    <!--<context:component-scan base-package="stingion.spring.integration"/>-->

    <!-- this channel is called by the application and the message is passed to it -->
    <!--<integration:channel id="inputChannel"/>-->

    <!--
    <integration:channel id="positive"/>
    <integration:channel id="negative"/>

    <integration:inbound-channel-adapter id="numbers" ref="counter" method="randomInt">
        <integration:poller max-messages-per-poll="1" fixed-delay="3000"/>
    </integration:inbound-channel-adapter>
-->
    <!-- this channel receive the modified message -->
    <!--
    <integration:channel id="outputChannel"/>

    <integration:router input-channel="numbers" expression="payload >= 0 ? 'positive' : 'negative'"/>

    <integration:service-activator input-channel="positive" ref="helloService" method="positiveNumber"
                                   output-channel="outputChannel"/>

    <integration:service-activator input-channel="negative" ref="helloService" method="negativeNumber"
                                   output-channel="outputChannel"/>

-->
    <!--<integration:router input-channel="routy" expression="payload >= 0 ? 'positive' : 'negative'"/>-->

    <!-- this service transform the message in input-channel and send the result to output-channel -->
    <!-- the service method to call is referenced in explicitly -->
    <!--<integration:service-activator input-channel="inputChannel" ref="helloService" method="sayHello" output-channel="outputChannel"/>-->
    <!--<integration:service-activator input-channel="inputChannel" ref="helloService" method="sayHello" output-channel="outputChannel"/>-->
    <!--<integration:service-activator input-channel="inputChannel2" ref="helloService" method="sayRevers" output-channel="outputChannel"/>-->

    <!-- this service receives a message and pass it to printerService -->
    <!-- the method that consumes the message is implicitly defined by the @ServiceActivator annotation or it should be the only
    method in the class -->
    <!--
    <integration:service-activator input-channel="outputChannel" ref="printerService"/>
-->

    <!--<integration:channel id="controlChannel2"/>-->

    <!--<integration:channel id="adapterOutputChannel">-->
        <!--<integration:queue/>-->
    <!--</integration:channel>-->

    <!--<integration:control-bus input-channel="controlChannel2"/>-->

    <!--<integration:inbound-channel-adapter id="inboundAdapter"-->
                                         <!--channel="adapterOutputChannel"-->
                                         <!--expression="'Hello'"-->
                                         <!--auto-startup="false">-->
        <!--<integration:poller fixed-rate="1000"/>-->
    <!--</integration:inbound-channel-adapter>-->

    <import resource="spring-config2.xml"/>
    <import resource="spring-config3.xml"/>

</beans>